using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{

    /*
     * Complete the 'getStrength' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts following parameters:
     *  1. STRING password
     *  2. INTEGER weight_a
     */

    public static int getStrength(string password, int weight_a)
    {
    // Complete the function
        
        var alphabet = "abcdefghijklmnopqrstuvwxyz";
        
        var summ=0;
        
        for(int i=0;i<password.Length;i++){
            var indexOf = alphabet.IndexOf(password[i]);
            
            indexOf = (indexOf+weight_a)%26;
            
            summ=summ+indexOf;
        }
        
        return summ;
    }

}

class Solution
{
    public static void Main(string[] args)
    {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        string password = Console.ReadLine();

        int weight_a = Convert.ToInt32(Console.ReadLine().Trim());

        int strength = Result.getStrength(password, weight_a);

        textWriter.WriteLine(strength);

        textWriter.Flush();
        textWriter.Close();
    }
}
